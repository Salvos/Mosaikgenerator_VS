@model Datenbank.DAL.Pools

@{
    ViewBag.Title = "Edit";
}

<h2>Bearbeite: @Html.Raw(ViewBag.Poolname)</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.size)
        @Html.HiddenFor(model => model.writelock)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Speichern" class="btn btn-default" />
                @if (ViewBag.isKachelPool)
                {
                    <a href="@Url.Action("Kacheln", "Pools")" class="btn btn-warning">
                        Zurück zur Sammlung
                    </a>
                }
                else
                {
                    <a href="@Url.Action("Bildersammlungen", "Pools")" class="btn btn-warning">
                        Zurück zur Sammlung
                    </a>
                }
            </div>
        </div> 
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
